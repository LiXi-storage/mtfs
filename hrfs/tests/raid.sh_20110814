#!/bin/bash
set -e
ONLY=${ONLY:-"$*"}

BUG_274="2"
#BUG_275="0c"

EXCEPT_SLOW=""
ALWAYS_EXCEPT=${ALWAYS_EXCEPT:-"$BUG_274 $BUG_275 $EXAMPLE_EXCEPT"}

TESTS_DIR=${TESTS_DIR:-$(cd $(dirname $0); echo $PWD)}
. $TESTS_DIR/test-framework.sh
init_test_env

echo "==== $0: started ===="

#
#TESTS_0: read and write
#Because of cache, writting on hidden_fs will not affect upper_fs, unless upper_fs restarted
#NEVER let this happen, because unexpected things always happen!
#
test_0a() 
{
	echo -n foo > $DIR/$tfile
	echo -n right > $HRFS_DIR1/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	#this will have problem because inode_size will not be cached
	# $CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong 1"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "right" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 5 $DIR/$tfile || error "file size wrong 2"
}
run_test 0a "writting on primary branch should not count, unless restart============="

test_0b()
{
	echo -n foo > $DIR/$tfile
	echo -n wrong > $HRFS_DIR2/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong 1"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong"
}
run_test 0b "writting on secondary branch should not count =========================="

test_0c() 
{
	echo -n foo > $DIR/$tfile
	echo -n right > $HRFS_DIR1/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	echo -n foo > $DIR/$tfile
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong"
}
run_test 0c "writting on upper_fs should count ======================================"

test_0d() 
{
	echo -n foo > $DIR/$tfile
	echo -n right >> $HRFS_DIR1/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	#this will have problem because inode_size will not be cached
	# $CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong 1"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "fooright" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 8 $DIR/$tfile || error "file size wrong 2"
}
run_test 0d "appending on primary branch should not count, unless restart============"

test_0e()
{
	echo -n foo > $DIR/$tfile
	echo -n wrong >> $HRFS_DIR2/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong 1"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong"
}
run_test 0e "appending on secondary branch should not count ========================"

#Oop, what is this!
test_0f() 
{
	echo -n foo > $DIR/$tfile
	echo -n right >> $HRFS_DIR1/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	echo -n up >> $DIR/$tfile
	[ "`cat $DIR/$tfile`" = "fooup" ] || error "file data wrong 2"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "foorightup" ] || error "file data wrong 3"
	$CHECKSTAT -t file -s 10 $DIR/$tfile || error "file size wrong"
}       
run_test 0f "appending on upper_fs should count ===================================="

#
#TESTS_1: attr:chmod
#Attrs has no cache, so changes on hidden_fs will directly affect upper_fs
#
test_1a()
{
	chmod 0755 $DIR
	chmod 0777 $HRFS_DIR1
	$CHECKSTAT -p 0777 $DIR || error "mode wrong 1"
	remount_hrfs
	$CHECKSTAT -p 0777 $DIR || error "mode wrong 2"
}
run_test 1a "chmod on / of primary branch should count ============================="

test_1b()
{
	chmod 0755 $DIR
	chmod 0777 $HRFS_DIR2
	$CHECKSTAT -p 0755 $DIR || error "mode wrong 1"
	remount_hrfs
	$CHECKSTAT -p 0755 $DIR || error "mode wrong 2"
}
run_test 1b "chmod on / of secondary should not count =============================="

test_1c()
{
	touch $DIR/$tfile
	chmod 0755 $DIR/$tfile
	chmod 0777 $HRFS_DIR1/$tfile
	$CHECKSTAT -p 0777 $DIR/$tfile || error "mode wrong 1"
	remount_hrfs
	$CHECKSTAT -p 0777 $DIR/$tfile || error "mode wrong 2"
}
run_test 1c "chmod on /tfile of primary branch should count ========================"

test_1d()
{
	touch $DIR/$tfile
	chmod 0755 $DIR/$tfile
	chmod 0777 $HRFS_DIR2/$tfile
	$CHECKSTAT -p 0755 $DIR/$tfile || error "mode wrong 1"
	remount_hrfs
	$CHECKSTAT -p 0755 $DIR/$tfile || error "mode wrong 2"
}
run_test 1d "chmod on /tfile of secondary branch should not count =================="

test_1e()
{
	mkdir -p $DIR/$tdir
	chmod 0755 $DIR/$tdir
	chmod 0777 $HRFS_DIR1/$tdir
	$CHECKSTAT -p 0777 $DIR/$tdir || error "mode wrong 1"
	remount_hrfs
	$CHECKSTAT -p 0777 $DIR/$tdir || error "mode wrong 2"
}
run_test 1e "chmod on /tdir of primary branch should count ========================="

test_1f()
{
	touch $DIR/$tdir
	chmod 0755 $DIR/$tdir
	chmod 0777 $HRFS_DIR2/$tdir
	$CHECKSTAT -p 0755 $DIR/$tdir || error "mode wrong 1"
	remount_hrfs
	$CHECKSTAT -p 0755 $DIR/$tdir || error "mode wrong 2"
}
run_test 1f "chmod on /tdir of secondary branch should not count ==================="

#
#TESTS_2: mkdir and rmdir
#
test_2a()
{
	mkdir -p $DIR/$tdir
	rmdir $HRFS_DIR1/$tdir
	$CHECKSTAT -a $DIR/$tdir || error "found rmoved_dir"
}
run_test 2a "removed secondary branch should recover ==============================="

test_2b()
{
	echo -n foo > $DIR/$tfile
	echo -n wrong > $HRFS_DIR2/$tfile
	echo -n tail >> $DIR/$tfile
	[ "`cat $DIR/$tfile`" = "footail" ] || error "file data wrong"
	$CHECKSTAT -t file -s 7 $DIR/$tfile || error "file size wrong"
	[ "`cat $HRFS_DIR2/$tfile`" = "footail" ] || error "secondary branch not recover"
}
run_test 2b "append write should recover secondary branch =========================="

#
#TESTS_3: read and write on another mnt
#Because of cache, writting on hidden_fs will not affect upper_fs, unless upper_fs restarted
#
mount_swgfs2
test_3a()
{
	echo -n foo > $DIR/$tfile
	echo -n right > $HRFS2_DIR1/$tfile
	[ "`cat $DIR/$tfile`" = "right" ] || error "file data wrong"
	$CHECKSTAT -t file -s 5 $DIR/$tfile || error "file size wrong"
}
run_test 3a "writing on the primary branch of another mnt should count =============="

test_3b() 
{
	echo -n foo > $DIR/$tfile
	echo -n wrong > $HRFS2_DIR2/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong"
}       
run_test 3b "writing on the secondary branch of another mnt should not count  ======="

test_3c()
{
	echo -n foo > $DIR/$tfile
	echo -n right >> $HRFS2_DIR1/$tfile
	[ "`cat $DIR/$tfile`" = "fooright" ] || error "file data wrong"
	$CHECKSTAT -t file -s 8 $DIR/$tfile || error "file size wrong"
}
run_test 3c "appending on the primary branch of another mnt should count ============"

test_3d() 
{
	echo -n foo > $DIR/$tfile
	echo -n wrong > $HRFS2_DIR2/$tfile
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 1"
	remount_hrfs
	[ "`cat $DIR/$tfile`" = "foo" ] || error "file data wrong 2"
	$CHECKSTAT -t file -s 3 $DIR/$tfile || error "file size wrong"
}       
run_test 3d "appending on the secondary branch of another mnt should not count  ====="
umount_swgfs2

cleanup_all
echo "=== $0: completed ==="
