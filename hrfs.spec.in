# hrfs.spec
%{!?version: %define version @VERSION@}
%{!?kversion: %define kversion @LINUXRELEASE@}
%{!?release: %define release @RELEASE@}
%{!?hrfs_name: %define hrfs_name hrfs}
%{!?build_hrfs_tests: %define build_hrfs_tests 1}

#%define is_client %(bash -c "if [[ %{lustre_name} = *-client ]]; then echo -n '1'; else echo -n '0'; fi")
# for those uses that don't want the -smp/-bigsmp on the end of %kversion
%define krequires %(bash -c "echo %{kversion} | sed -e 's/.x86_64$//' -e 's/.i586$//' -e 's/-smp$//' -e 's/-bigsmp$//' -e 's/-ppc64$//' -e 's/-default$//'")

Summary: HRFS File System
Name: %{hrfs_name}
Version: %{version}
Release: %{release}
License: GPL
Group: Utilities/System
Source: hrfs-%{version}.tar.gz
URL: http://www.jn.com/hrfs
BuildRoot: %{_tmppath}/hrfs-%{version}-root
Obsoletes: lustre-lite, lustre-lite-utils, lustre-ldap nfs-utils-lustre
Provides: lustre-lite = %{version}, lustre-lite-utils = %{version}
Requires: %{name}-modules = %{version}
# GSS requires this: BuildRequires: pkgconfig, libgssapi-devel >= 0.10

%description
Userspace tools and files for the Lustre file system.

%package modules
Summary: Kernel Lustre modules for Linux %{kversion}
Requires: modutils >= 2.4.10, kernel = %{krequires}
Group: Development/Kernel

%description modules
Hrfs file system, modules for Linux %{kversion}.

%package source
Summary: Object-Based Disk storage driver source
Group: Development/Kernel

%description source
Hrfs sources for further development

# Since the RPMs we ship are to be used on both SLES and RHEL, we
# can't include any dependency information (since the package names
# are different on the two platforms).
#
# Instead, we can build these empty meta-packages that only include
# dependency information.  These let people get the correct
# dependencies for their platform and lets them use tools like yum and
# red carpet to install the correct files.
#
# Unfortunately I have not seen this come up on the lists much, so I
# have disabled them (by commenting out their empty files section
# below) until it's clear that they resolve more confusion than they
# add.

%package deps-sles
Summary: Lustre dependencies meta-package for SLES
Group: Utilities/System
Provides: lustre-deps = %{version}
Requires: %{name} = %{version}, sles-release
Conflicts: %{name}-deps-rhel

%description deps-sles
This package has RPM dependencies appropriate for SLES systems.

%package deps-rhel
Summary: Lustre dependencies meta-package for RHEL
Group: Utilities/System
Provides: lustre-deps = %{version}
Requires: %{name} = %{version}, redhat-release
Conflicts: %{name}-deps-sles

%description deps-rhel
This package has RPM dependencies appropriate for RHEL, RHL, and FC
systems.

%package tests
Summary: Hrfs testing framework
Group: Development/Kernel
Provides: %{name}-tests = %{version}
Requires: %{name} = %{version}, %{name}-modules = %{version}

%description tests
This package contains a set of test binaries and scripts that are intended
to be used by the Hrfs testing framework.

%prep
%setup -qn hrfs-%{version}
ln hrfs/ChangeLog ChangeLog-hrfs

%build
# if RPM_BUILD_NCPUS unset, set it
if [ -z "$RPM_BUILD_NCPUS" ] ; then
    RPM_BUILD_NCPUS=$(egrep -c "^cpu[0-9]+" /proc/stat 2>/dev/null || echo 0 :)
    if [ $RPM_BUILD_NCPUS -eq 0 ] ; then
        RPM_BUILD_NCPUS=1
    fi
    if [ $RPM_BUILD_NCPUS -gt 8 ] ; then
        RPM_BUILD_NCPUS=8
    fi
fi

rm -rf $RPM_BUILD_ROOT

# Set an explicit path to our Linux tree, if we can.
cd $RPM_BUILD_DIR/hrfs-%{version}
# override %optflags so that the vendor's overzealous flags don't create
# build failures
%define optflags -g -O2 -Werror
CONFIGURE_ARGS=""
%if %{build_hrfs_tests}
CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-tests --enable-liblustre-tests"
%else
CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-tests --disable-liblustre-tests"
%endif
%configure %{?configure_args:%configure_args} $CONFIGURE_ARGS
make -j $RPM_BUILD_NCPUS -s

%install
make install DESTDIR=$RPM_BUILD_ROOT
# hack to avoid changing the libsysio code for "make install"
rm -f $RPM_BUILD_ROOT%{_libdir}/libsysio.a
# Remove ldiskfs module(s) - they are packaged by the ldiskfs .spec.
rm -rf $RPM_BUILD_ROOT/lib/modules/%{kversion}/kernel/fs/lustre-ldiskfs

# hack to include the llog_test module in lustre-tests
llog_base=$RPM_BUILD_DIR/hrfs-%{version}/lustre/obdclass/llog_test
if [ -e ${llog_base}.ko ]; then
  cp ${llog_base}.ko $RPM_BUILD_ROOT/lib/modules/%{kversion}/kernel/fs/lustre
elif [ -e ${llog_base}.o ]; then
  cp ${llog_base}.o $RPM_BUILD_ROOT/lib/modules/%{kversion}/kernel/fs/lustre
fi

# Create the pristine source directory.
cd $RPM_BUILD_DIR/hrfs-%{version}
mkdir -p $RPM_BUILD_ROOT/usr/src
rm -f hrfs-source
ln -s $RPM_BUILD_ROOT/usr/src hrfs-source
make distdir distdir=hrfs-source/hrfs-%{version}
chmod -R go-w hrfs-source/hrfs-%{version}

cat >hrfs.files <<EOF
%attr(-, root, root) /sbin/mount.hrfs
%attr(-, root, root) /usr/sbin/*
%attr(-, root, root) /usr/bin/*

#%attr(-, root, root) /usr/share/lustre

%attr(-, root, root) %{_libdir}/libuser.a
%attr(-, root, root) %{_libdir}/libuser.so
%attr(-, root, root) %{_libdir}/libhrfsapi.a
#%attr(-, root, root) %{_libdir}/liblustreapi.a
#%attr(-, root, root) /usr/include/lustre

#%attr(-, root, root) %{_mandir}/man?/*

#%attr(-, root, root) %{_libexecdir}/lustre/lc_common
EOF

%if %{build_hrfs_tests}
echo '%attr(-, root, root) %{_libdir}/hrfs/tests/*' >hrfs-tests.files
#echo '%attr(-, root, root) /lib/modules/%{kversion}/kernel/fs/lustre/llog_test.*' >>lustre-tests.files
#modules_excludes="|llog_test"
#if [ -d $RPM_BUILD_ROOT%{_libdir}/lustre/liblustre/tests ] ; then
#  echo '%attr(-, root, root) %{_libdir}/lustre/liblustre/tests/*' >>lustre-tests.files
#fi
%endif

pushd $RPM_BUILD_ROOT >/dev/null
find lib/modules/%{kversion}/kernel -type f | awk "!/(ZZZZZZZZZZ$modules_excludes)/ {print \"%attr(-, root, root) /\"\$0}" >>$RPM_BUILD_DIR/hrfs-%{version}/hrfs-modules.files
popd >/dev/null

%files -f hrfs.files

%files modules -f hrfs-modules.files
%attr(-, root, root) %doc COPYING
%attr(-, root, root) %doc ChangeLog-hrfs
#%attr(-, root, root) %doc ChangeLog-lnet

%files source
%attr(-, root, root) /usr/src/hrfs-%{version}

# uncomment these lines to enable deps packages
# %files deps-sles
# %files deps-rhel

%if %{build_hrfs_tests}
%files tests -f hrfs-tests.files
%endif

%post modules
if [ -f /boot/System.map-%{kversion} ]; then
	depmod -ae -F /boot/System.map-%{kversion} %{kversion} || exit 0
else
	depmod -ae %{kversion} || exit 0
fi
cat <<EOF
Congratulations on finishing your Lustre installation!
To find out more about support offerings please visit

http://www.hrfs.org
EOF

# for update from < v1.4.6

for f in /etc/modules.conf /etc/modprobe.conf /etc/modprobe.conf.local ; 
do
	if [ -f $f ]; then
		if grep 'lustre llite' $f >/dev/null 2>/dev/null ; then
			[ ! -f $f.rpmsave ] && cp $f $f.rpmsave
			TMPFILE=`mktemp $f.XXXXXX` && \
			rm -f $TMPFILE && touch $TMPFILE && \
			grep -v 'lustre llite' $f >> $TMPFILE && \
			mv $TMPFILE $f
		fi
		if egrep "^[^#]*(add below|install) ptlrpc" $f ; then
			[ ! -f $f.rpmsave ] && cp $f $f.rpmsave
			TMPFILE=`mktemp $f.XXXXXX` && \
			rm -f $TMPFILE && touch $TMPFILE && \
			sed -e "s/^[^#]*\(add below\|install\) ptlrpc.*/#&/" $f >> $TMPFILE && \
			mv $TMPFILE $f
		fi
	fi
done

# If the kernel was built to reject unsupported modules (e.g. not a Lustre
# kernel), and this hasn't been overridden in /etc/modprobe.d yet, then
# print a warning so that users are aware of this issue.
if sysctl kernel.unsupported >/dev/null 2>&1 &&
   [ "$(sysctl -n kernel.unsupported 2>/dev/null)" = "0" ] &&
    ! modprobe -c | grep -q "^allow_unsupported_modules[ \t]1" ; then
     echo "
     warning: the Lustre modules are not supported by Novell. To use Lustre
              on this system, you should put

     allow_unsupported_modules 1

     into /etc/modprobe.d/unsupported_modules"
fi

%postun modules
if [ -f /boot/System.map-%{kversion} ]; then
	depmod -ae -F /boot/System.map-%{kversion} %{kversion} || exit 0
else
	depmod -ae %{kversion} || exit 0
fi

%if %{build_hrfs_tests}
%post tests
if [ -f /boot/System.map-%{kversion} ]; then
	depmod -ae -F /boot/System.map-%{kversion} %{kversion} || exit 0
else
	depmod -ae %{kversion} || exit 0
fi

%postun tests
if [ -f /boot/System.map-%{kversion} ]; then
	depmod -ae -F /boot/System.map-%{kversion} %{kversion} || exit 0
else
	depmod -ae %{kversion} || exit 0
fi
%endif

%clean
rm -rf $RPM_BUILD_ROOT
